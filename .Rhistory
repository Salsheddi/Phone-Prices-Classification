dataset_phones=read.csv("cleaned_all_phones.csv",header=TRUE,sep=',')
library(readr)
cleaned_all_phones <- read_csv("~/cleaned_all_phones.csv")
View(cleaned_all_phones)
dataset_phones=read.csv("cleaned_all_phones.csv",header=TRUE,sep=',')
dataset_phones= read.csv("C:\\Users\\shade\\OneDrive\\Documents\\cleaned_all_phones.csv" ,header=TRUE,sep=',')
result=cor(dataset_phones$price.USD. ,dataset_phones$ram.GB.)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$weight.g.)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$width)
dataset_phones= read.csv("C:\\Users\\shade\\OneDrive\\Documents\\cleaned_all_phones.csv" ,header=TRUE,sep=',')
install.packages("ggplot2")
library(ggplot2)
installed.packages("dplyr")
library(dplyr)
nrow(dataset_phones)
ncol(dataset_phones)
head(dataset_phones,10)
tail(dataset_phones,10)
str(dataset_phones)
dim(dataset_phones)
dataset_phones=na.omit(dataset_phones)
dim(dataset_phones)
sum(is.na(dataset_phones))
num_duplicates <- sum(duplicated(dataset_phones))
cat("Number of duplicate rows:", num_duplicates, "\n")
summary(dataset_phones)
mean(dataset_phones$inches)
mean(dataset_phones$battery)
mean(dataset_phones$ram.GB.)
mean(dataset_phones$weight.g.)
mean(dataset_phones$storage.GB.)
mean(dataset_phones$price.USD.)
median(dataset_phones$inches)
median(dataset_phones$battery)
median(dataset_phones$ram.GB.)
median(dataset_phones$weight.g.)
median(dataset_phones$storage.GB.)
median(dataset_phones$price.USD.)
variables <- c(
"phone_name", "brand", "os", "inches", "resolution", "battery",
"battery_type", "ram.GB.", "announcement_date", "weight.g.",
"storage.GB.", "video_720p", "video_1080p", "video_4K",
"video_8K", "video_30fps", "video_60fps", "video_120fps",
"video_240fps", "video_480fps", "video_960fps", "price.USD."
)
find_mode <- function(x) {
tab <- table(x)
names(tab)[tab == max(tab)]
}
for (variable in variables) {
cat("Variable:", variable, "\n")
cat("Mode(s):", find_mode(y[[variable]]), "\n\n")
}
dataset_phones= read.csv("C:\\Users\\shade\\OneDrive\\Documents\\cleaned_all_phones.csv" ,header=TRUE,sep=',')
install.packages("ggplot2")
library(ggplot2)
installed.packages("dplyr")
library(dplyr)
nrow(dataset_phones)
ncol(dataset_phones)
head(dataset_phones,10)
tail(dataset_phones,10)
str(dataset_phones)
dim(dataset_phones)
dataset_phones=na.omit(dataset_phones)
dim(dataset_phones)
sum(is.na(dataset_phones))
num_duplicates <- sum(duplicated(dataset_phones))
cat("Number of duplicate rows:", num_duplicates, "\n")
summary(dataset_phones)
mean(dataset_phones$inches)
mean(dataset_phones$battery)
mean(dataset_phones$ram.GB.)
mean(dataset_phones$weight.g.)
mean(dataset_phones$storage.GB.)
mean(dataset_phones$price.USD.)
median(dataset_phones$inches)
median(dataset_phones$battery)
median(dataset_phones$ram.GB.)
median(dataset_phones$weight.g.)
median(dataset_phones$storage.GB.)
median(dataset_phones$price.USD.)
variables <- c(
"phone_name", "brand", "os", "inches", "resolution", "battery",
"battery_type", "ram.GB.", "announcement_date", "weight.g.",
"storage.GB.", "video_720p", "video_1080p", "video_4K",
"video_8K", "video_30fps", "video_60fps", "video_120fps",
"video_240fps", "video_480fps", "video_960fps", "price.USD."
)
find_mode <- function(x) {
tab <- table(x)
names(tab)[tab == max(tab)]
}
for (variable in variables) {
cat("Variable:", variable, "\n")
cat("Mode(s):", find_mode(y[[variable]]), "\n\n")
}
install.packages("ggplot2")
dataset_phones= read.csv("C:\\Users\\shade\\OneDrive\\Documents\\cleaned_all_phones.csv" ,header=TRUE,sep=',')
install.packages("ggplot2")
library(ggplot2)
installed.packages("dplyr")
library(dplyr)
nrow(dataset_phones)
ncol(dataset_phones)
head(dataset_phones,10)
tail(dataset_phones,10)
str(dataset_phones)
dim(dataset_phones)
dataset_phones=na.omit(dataset_phones)
dim(dataset_phones)
sum(is.na(dataset_phones))
num_duplicates <- sum(duplicated(dataset_phones))
cat("Number of duplicate rows:", num_duplicates, "\n")
summary(dataset_phones)
mean(dataset_phones$inches)
mean(dataset_phones$battery)
mean(dataset_phones$ram.GB.)
mean(dataset_phones$weight.g.)
mean(dataset_phones$storage.GB.)
mean(dataset_phones$price.USD.)
median(dataset_phones$inches)
median(dataset_phones$battery)
median(dataset_phones$ram.GB.)
median(dataset_phones$weight.g.)
median(dataset_phones$storage.GB.)
median(dataset_phones$price.USD.)
variables <- c(
"phone_name", "brand", "os", "inches", "resolution", "battery",
"battery_type", "ram.GB.", "announcement_date", "weight.g.",
"storage.GB.", "video_720p", "video_1080p", "video_4K",
"video_8K", "video_30fps", "video_60fps", "video_120fps",
"video_240fps", "video_480fps", "video_960fps", "price.USD."
)
find_mode <- function(x) {
tab <- table(x)
names(tab)[tab == max(tab)]
}
for (variable in variables) {
cat("Variable:", variable, "\n")
cat("Mode(s):", find_mode(y[[variable]]), "\n\n")
}
with(dataset_phones, plot(dataset_phones$price.USD., dataset_phones$battery))
ggplot(dataset_phones, aes(x = os)) +
geom_bar() +
labs(title = "Counts of Operating Systems", x = "Operating System", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
filtered_data <- dataset_phones[dataset_phones$os == 'Android 10/ Android 11', ]
print(filtered_data)
dataset_phones[888,3]<-"Android 11"
filtered_data <- dataset_phones[dataset_phones$os == 'Android', ]
print(filtered_data)
dataset_phones[1163,3]<-"Android 11"
dataset_phones[1233,3]<-"Android 11"
dataset_phones[1473,3]<-"Android 11"
filtered_data <- dataset_phones[dataset_phones$os == 'Android 12 or 13', ]
print(filtered_data)
dataset_phones[1410,3]<-"Android 13"
dataset_phones[1412,3]<-"Android 13"
phone_name_counts <- table(dataset_phones$phone_name)
phone_name_counts_df <- as.data.frame(phone_name_counts)
colnames(phone_name_counts_df) <- c("Phone Name", "Count")
print(phone_name_counts_df)
phone_name_counts <- table(dataset_phones$phone_name)
phone_name_counts_df <- as.data.frame(phone_name_counts)
colnames(phone_name_counts_df) <- c("Phone Name", "Count")
print(phone_name_counts_df)
filtered_data <- dataset_phones[dataset_phones$phone_name == '9', ]
print(filtered_data)
filtered_data <- dataset_phones[dataset_phones$phone_name == 'V30', ]
print(filtered_data)
dataset_phones <- dataset_phones[, !names(dataset_phones) %in% c("phone_name")]
num_duplicates <- sum(duplicated(dataset_phones))
cat("Number of duplicate rows:", num_duplicates, "\n")
dataset_phones$announcement_date <- as.character(dataset_phones$announcement_date)
dataset_phones$announcement_year <- as.integer(sapply(strsplit(dataset_phones$announcement_date, '-'), function(x) x[1]))
dataset_phones <- dataset_phones[, !names(dataset_phones) %in% c("announcement_date")]
dataset_phones$width <- as.integer(sapply(strsplit(dataset_phones$resolution, "x"), "[[", 1))
dataset_phones$height <- as.integer(sapply(strsplit(dataset_phones$resolution, "x"), "[[", 2))
boxplot(dataset_phones$width , data = dataset_phones, xlab = "width", ylab = "Frequancy")
boxplot(dataset_phones$height, data = dataset_phones, xlab =" height"
, ylab = "Frequancy")
boxplot.stats(dataset_phones$height)$out
boxplot.stats(dataset_phones$width)$out
library(dplyr)
dataset_phones<- dataset_phones%>%
filter(price.USD. <= 1750,
storage.GB. >= 8 & storage.GB. <= 512,
ram.GB. >= 5 & ram.GB.< 24,
battery >= 2500 & battery < 7000,
width>=480 & width<3840)
dataset_phones$video_720p=as.integer(as.logical(dataset_phones$video_720p))
dataset_phones$video_1080p=as.integer(as.logical(dataset_phones$video_1080p))
dataset_phones$video_4K=as.integer(as.logical(dataset_phones$video_4K))
dataset_phones$video_8K=as.integer(as.logical(dataset_phones$video_8K))
dataset_phones$video_30fps=as.integer(as.logical(dataset_phones$video_30fps))
dataset_phones$video_60fps=as.integer(as.logical(dataset_phones$video_60fps))
dataset_phones$video_120fps=as.integer(as.logical(dataset_phones$video_120fps))
dataset_phones$video_240fps=as.integer(as.logical(dataset_phones$video_240fps))
dataset_phones$video_480fps=as.integer(as.logical(dataset_phones$video_480fps))
dataset_phones$video_960fps=as.integer(as.logical(dataset_phones$video_960fps))
dataset_phones$battery_type=factor(dataset_phones$battery_type,levels = c("Li-Ion","Li-Po"),labels = c(0,1))
normalize <- function(x) { return((x - min(x))/ (max(x) - min(x)))}
dataset_phones$weight.g. <- normalize(dataset_phones$weight.g.)
dataset_phones$inches <- normalize(dataset_phones$inches)
dataset_phones$battery <- normalize(dataset_phones$battery)
dataset_phones$width <- normalize(dataset_phones$width)
dataset_phones$height <- normalize(dataset_phones$height)
dataset_phones$storage.GB. <- normalize(dataset_phones$storage.GB.)
dataset_phones$ram.GB. <- normalize(dataset_phones$ram.GB.)
dataset_phones$price=cut (dataset_phones$price.USD., breaks=c(40, 610, 1180, 1750), labels=c("cheap","affordable","expensive") )
summary(dataset_phones)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$phone_name)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$os)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$brand)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$battery_type)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_720p)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_1080p)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_4K)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_8K)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_30fps)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_60fps)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_120fps)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_240fps)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_480fps)
print(result)
result=chisq.test(dataset_phones$price.USD. , dataset_phones$video_960fps)
print(result)
result2=cor(dataset_phones$price.USD. ,dataset_phones$inches)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$battery)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$ram.GB.)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$weight.g.)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$storage.GB.)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$width)
print(result2)
result2=cor(dataset_phones$price.USD. ,dataset_phones$height)
print(result2)
result=cor(dataset_phones$price.USD. ,dataset_phones$ram.GB.)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$weight.g.)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$width)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$height)
print(result)
result=cor(dataset_phones$price.USD. ,dataset_phones$inches)
print(result)
write.csv(dataset_phones , file = "updated_data" , row.names = TRUE)
write.csv(dataset_phones , file = "updated_data" , row.names = FALSE)
summary(dataset_phones)
write.table(dataset_phones, file = "my_dataset.tbl", sep = "\t")
library(xlsReadWrite)
install.packages("xlsReadWrite")
library(xlsReadWrite)
write.xls(dataset_phones, "c:/my_dataset.xls")
write.csv(dataset_phones , "c:/updated_data.cvs" , row.names = TRUE)
write.csv(dataset_phones , "updated_data.cvs" , row.names = TRUE)
write.csv(dataset_phones , "updated_data.cvs" , row.names = TRUE)
write.csv(dataset_phones , "updated_data.cvs" , row.names = TRUE)
write.csv(dataset_phones , "c:/documents/updated_data.cvs" , row.names = TRUE)
write.csv(updated_data , "dataset_phones" , row.names = TRUE)
